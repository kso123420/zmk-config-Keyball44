#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESC     &kp Q         &kp W       &kp E        &kp R        &kp T                                               &kp Y        &kp U       &kp I      &kp O       &kp P            &kp BACKSPACE
&kp TAB     &mt LSHIFT A  &mt LALT S  &mt LCTRL D  &mt LCMD F   &kp G                                               &kp H        &mt RCMD J  &lt 5 K    &mt RALT L  &mt RSHIFT SEMI  &kp RETURN
&kp LSHIFT  &kp Z         &kp X       &kp C        &kp V        &kp B                                               &kp N        &kp M       &kp COMMA  &kp DOT     &kp SLASH        &mt RSHIFT RCMD
                          &kp LCTRL   &kp LALT     &lt 3 SPACE  &lt 1 SPACE  &lt 2 SINGLE_QUOTE        &lt 1 SPACE  &lt 2 SPACE                                     &kp RIGHT_ALT
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&trans  &kp ESC  &trans  &trans  &trans  &kp B                         &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS      &none
&trans  &kp TAB  &trans  &trans  &trans  &trans                        &kp SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS     &none
&kp C    &trans  &trans  &trans  &trans  &kp D                         &kp DOT       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none
                 &trans  &trans  &trans  &trans  &trans        &trans  &trans                                                  &kp EQUAL
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp GRAVE         &kp EXCLAMATION       &kp AT_SIGN            &kp HASH          &kp DOLLAR         &kp EQUAL                               &kp A   &trans  &trans  &trans  &kp BACKSPACE  &kp B
&kp SINGLE_QUOTE  &kp PERCENT           &kp CARET              &kp AMPERSAND     &kp ASTERISK       &kp MINUS                               &trans  &trans  &trans  &trans  &kp RETURN     &trans
&trans            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH                           &kp C   &trans  &trans  &trans  &trans         &kp D
                                        &trans                 &trans            &trans             &kp GRAVE         &trans           &trans  &trans                          &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none  &kp F1   &kp F2   &kp F3   &kp F4   &none                         &none  &none  &none  &none  &none  &none
&none  &kp F5   &kp F6   &kp F7   &kp F8   &none                         &none  &none  &none  &none  &none  &none
&none  &kp F9   &kp F10  &kp F11  &kp F12  &none                         &none  &none  &none  &none  &none  &none
                &trans   &trans   &trans   &trans  &trans        &trans  &mo 3                       &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &kp N1          &kp N2          &kp N3        &kp N4     &kp N5              &none           &kp UP_ARROW     &none  &none      &none      &none
&none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none               &kp LEFT_ARROW  &kp RIGHT_ARROW  &none  &mkp LCLK  &mkp RCLK  &none
&none   &none           &none           &none         &none      &none               &none           &kp DOWN_ARROW   &none  &none      &none      &none
&trans  &trans          &trans          &trans        &trans                 &trans  &trans                                             &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };
};
